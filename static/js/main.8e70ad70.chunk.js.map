{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","buttonsCount","Math","ceil","labels","prevButtonDisabled","nextButtonDisabled","className","classNames","disabled","href","onClick","map","number","active","items","getNumber","itemText","slice","App","useState","length","itemsPerPage","setItemsPerPage","setCurrentPage","visibleItems","indexLast","calculateVisibleItems","firstItemOnPage","lastItemOnPage","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAeC,KAAKC,KAAKN,EAAQC,GAEjCM,EAASd,EAAW,EAAGW,GACvBI,EAAqC,IAAhBN,EACrBO,EAAqBP,IAAgBE,EAE3C,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAAUJ,IAHd,SAOE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACFN,GACHL,EAAaD,EAAc,IAPjC,oBAeDK,EAAOQ,KAAI,SAAAC,GAAM,OAChB,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAAWd,IALzB,SASE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPX,EAAaa,IALjB,SAQGA,KAhBEA,MAsBT,oBAAIN,UAAWC,IACb,YACA,CACEC,SAAUH,IAHd,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WACFL,GACHN,EAAaD,EAAc,IAPjC,wBCzEFgB,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAQdsB,EAAY,SAACC,GACjB,OAAOA,EAASC,MAAM,IAGXC,EAAgB,WAC3B,MAAgBC,mBAASL,EAAMM,QAAxBxB,EAAP,oBACA,EAAwCuB,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAsCH,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoByB,EAApB,KAGMC,EAhBsB,SAAC3B,EAAiBC,GAC9C,IAAM2B,EAAY5B,EAAUC,EAE5B,OAAOgB,EAAMG,MAAMQ,EAAY5B,EAAS4B,GAanBC,CAAsBL,EAAcvB,GAEnD6B,EAAkBZ,EAAUS,EAAa,IACzCI,EAAiBb,EAAUS,EAAaA,EAAaJ,OAAS,IAEpE,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC6B,EADjC,cACsDC,EADtD,eAC2EhC,EAD3E,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOT,EACPU,SAAU,SAACC,GACTV,GAAiBU,EAAMC,OAAOH,OAC9BP,EAAe,IAPnB,SAhBmB,CAAC,EAAG,EAAG,GAAI,IA0BRZ,KAAI,SAACC,GAAD,OACtB,wBACEkB,MAAOlB,EADT,SAIGA,GAFIA,UAQb,uBAAOsB,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASwB,EACTvB,YAAaA,EACbC,aAAcwB,IAGhB,6BACGC,EAAab,KAAI,SAAAwB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCzEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8e70ad70.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const buttonsCount = Math.ceil(total / perPage);\n\n  const labels = getNumbers(1, buttonsCount);\n  const prevButtonDisabled = currentPage === 1;\n  const nextButtonDisabled = currentPage === buttonsCount;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: prevButtonDisabled,\n        },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={prevButtonDisabled}\n          onClick={() => {\n            if (!prevButtonDisabled) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {labels.map(number => (\n        <li\n          key={number}\n          className={classNames(\n            'page-item',\n            {\n              active: number === currentPage,\n            },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => {\n              onPageChange(number);\n            }}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n\n      {/* <li className=\"page-item\"> */}\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: nextButtonDisabled,\n        },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextButtonDisabled}\n          onClick={() => {\n            if (!nextButtonDisabled) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst calculateVisibleItems = (perPage: number, currentPage: number) => {\n  const indexLast = perPage * currentPage;\n\n  return items.slice(indexLast - perPage, indexLast);\n};\n\nconst getNumber = (itemText: string): string => {\n  return itemText.slice(5);\n};\n\nexport const App: React.FC = () => {\n  const [total] = useState(items.length);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const itemsPerPageValues = [3, 5, 10, 20];\n  const visibleItems = calculateVisibleItems(itemsPerPage, currentPage);\n\n  const firstItemOnPage = getNumber(visibleItems[0]);\n  const lastItemOnPage = getNumber(visibleItems[visibleItems.length - 1]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            {itemsPerPageValues.map((number) => (\n              <option\n                value={number}\n                key={number}\n              >\n                {number}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}